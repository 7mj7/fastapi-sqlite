# scripts/init_db.py

"""
Instrucciones de Ejecuci√≥n:

Este script debe ejecutarse desde el directorio ra√≠z del proyecto usando el m√≥dulo Python.

1. Para inicializaci√≥n normal (crea tablas y datos solo si no existen):
   python -m scripts.init_db

2. Para reiniciar la base de datos (elimina todo y recrea desde cero):
   python -m scripts.init_db --reset

Ejemplos de uso:
    # Estando en el directorio ra√≠z del proyecto:
    > python -m scripts.init_db         # Inicializaci√≥n segura
    > python -m scripts.init_db --reset # Reinicio completo (¬°Cuidado! Elimina datos existentes)

Notas:
- La opci√≥n --reset eliminar√° TODOS los datos existentes
- Aseg√∫rese de tener respaldo antes de usar --reset
- El script crear√° usuarios de ejemplo por defecto
"""

# Importaciones necesarias
from config.db import get_db, engine, meta
from config.security import get_password_hash
from models.user import users  # Importar la tabla de usuarios
from models.gallery import galleries  # Importar la tabla de galer√≠as
from models.session import sessions  # Importar la tabla de sesiones
from models.photo import photos  # Importar la tabla de fotograf√≠as
from models.gallery_photos import (
    gallery_photos,
)  # Importar la tabla de fotograf√≠as en galer√≠as


# Funci√≥n para inicializar la base de datos
def init_db():
    """
    Inicializa la base de datos y crea datos de ejemplo.
    Usa la configuraci√≥n existente del archivo config/db.py
    """
    try:
        print("üöÄ Iniciando creaci√≥n de base de datos...")

        # Crear todas las tablas definidas en el metadata
        meta.create_all(engine)
        print("‚úÖ Tablas creadas correctamente")

        # Usar el context manager get_db para manejar la conexi√≥n
        with get_db() as conn:
            # Verificar si ya existen usuarios
            result = conn.execute(users.select()).first()

            if not result:
                print("üìù Insertando usuarios de ejemplo...")

                # Insertar usuarios de ejemplo con IDs espec√≠ficos
                usuarios = [
                    {
                        "id": 1,
                        "name": "Admin",
                        "email": "admin@example.com",
                        "password": get_password_hash("admin123"),
                        "role": "admin",
                        "photographer_id": None,  # Admin no tiene fot√≥grafo asignado
                    },
                    {
                        "id": 2,
                        "name": "Fot√≥grafo",
                        "email": "fotografo@example.com",
                        "password": get_password_hash("foto123"),
                        "role": "photographer",
                        "photographer_id": None,  # Fot√≥grafo no tiene fot√≥grafo asignado
                    },
                    {
                        "id": 3,
                        "name": "Cliente",
                        "email": "cliente@example.com",
                        "password": get_password_hash("cliente123"),
                        "role": "client",
                        "photographer_id": 2,  # Cliente asignado al fot√≥grafo (ID 2)
                    },
                    {
                        "id": 4,
                        "name": "Cliente 4",
                        "email": "cliente4@example.com",
                        "password": get_password_hash("cliente123"),
                        "role": "client",
                        "photographer_id": 2,  # Cliente asignado al fot√≥grafo (ID 2)
                    },
                    {
                        "id": 5,
                        "name": "Cliente 5",
                        "email": "cliente5@example.com",
                        "password": get_password_hash("cliente123"),
                        "role": "client",
                        "photographer_id": 2,  # Cliente asignado al fot√≥grafo (ID 2)
                    },
                    {
                        "id": 6,
                        "name": "Fot√≥grafo 6",
                        "email": "fotografo6@example.com",
                        "password": get_password_hash("foto123"),
                        "role": "photographer",
                        "photographer_id": None,  # Fot√≥grafo no tiene fot√≥grafo asignado
                    },
                    {
                        "id": 7,
                        "name": "Cliente 7",
                        "email": "cliente7@example.com",
                        "password": get_password_hash("cliente123"),
                        "role": "client",
                        "photographer_id": 6,  # Cliente asignado al fot√≥grafo (ID 6)
                    },
                    {
                        "id": 8,
                        "name": "Cliente 8",
                        "email": "cliente8@example.com",
                        "password": get_password_hash("cliente123"),
                        "role": "client",
                        "photographer_id": 6,  # Cliente asignado al fot√≥grafo (ID 6)
                    },
                ]

                # Insertar usuarios uno por uno para mantener los IDs espec√≠ficos
                for usuario in usuarios:
                    conn.execute(users.insert().values(usuario))
                print("‚úÖ Usuarios de ejemplo creados correctamente")

                # Insertar sesiones de ejemplo
                print("üì∏ Insertando sesiones fotogr√°ficas de ejemplo...")
                sesiones = [
                    {
                        "id": 1,
                        "name": "Boda Mar√≠a y Juan",
                        "date": "2025-02-15",
                        "photographer_id": 2,
                    },
                    {
                        "id": 2,
                        "name": "Sesi√≥n Familiar L√≥pez",
                        "date": "2025-02-20",
                        "photographer_id": 2,
                    },
                    {
                        "id": 3,
                        "name": "Evento Corporativo XYZ",
                        "date": "2025-03-01",
                        "photographer_id": 6,
                    },
                ]

                # Insertar sesiones
                for sesion in sesiones:
                    conn.execute(sessions.insert().values(sesion))
                print("‚úÖ Sesiones de ejemplo creadas correctamente")

                # Insertar fotos de ejemplo
                print("üì∑ Insertando fotos de ejemplo...")
                fotos = [
                    {
                        "id": 1,
                        "description": "Ceremonia de boda - Primer beso de los novios",
                        "path": "/uploads/sessions/1/boda_001.jpg",
                        "session_id": 1,
                    },
                    {
                        "id": 2,
                        "description": "Ceremonia de boda - Intercambio de anillos",
                        "path": "/uploads/sessions/1/boda_002.jpg",
                        "session_id": 1,
                    },
                    {
                        "id": 3,
                        "description": "Sesi√≥n familiar - Grupo completo en el parque",
                        "path": "/uploads/sessions/2/familia_001.jpg",
                        "session_id": 2,
                    },
                    {
                        "id": 4,
                        "description": "Evento corporativo - Presentaci√≥n principal",
                        "path": "/uploads/sessions/3/evento_001.jpg",
                        "session_id": 3,
                    },
                ]

                for foto in fotos:
                    conn.execute(photos.insert().values(foto))
                print("‚úÖ Fotos de ejemplo creadas correctamente")

                # Insertar galer√≠as de ejemplo
                print("üì∏ Insertando galer√≠as de ejemplo...")
                galerias = [
                    {
                        "id": 1,
                        "name": "Boda Mar√≠a y Juan - Selecci√≥n Final",
                        "description": "Fotos seleccionadas de la boda",
                        "photographer_id": 2,
                        "client_id": 3,
                    },
                    {
                        "id": 2,
                        "name": "Familia L√≥pez - Sesi√≥n Completa",
                        "description": "Todas las fotos de la sesi√≥n familiar",
                        "photographer_id": 2,
                        "client_id": 4,
                    },
                    {
                        "id": 3,
                        "name": "Evento XYZ - Highlights",
                        "description": "Mejores momentos del evento",
                        "photographer_id": 6,
                        "client_id": 7,
                    },
                ]

                # Insertar galer√≠as
                for galeria in galerias:
                    conn.execute(galleries.insert().values(galeria))
                print("‚úÖ Galer√≠as de ejemplo creadas correctamente")

                # Insertar relaciones entre galer√≠as y fotos
                print("üîó Insertando relaciones entre galer√≠as y fotos...")
                galeria_fotos = [
                    {
                        "id": 1,
                        "gallery_id": 1,  # Galer√≠a "Boda Mar√≠a y Juan"
                        "photo_id": 1,  # Foto "boda_001.jpg"
                        "selected": True,
                        "favorite": True,
                    },
                    {
                        "id": 2,
                        "gallery_id": 1,  # Galer√≠a "Boda Mar√≠a y Juan"
                        "photo_id": 2,  # Foto "boda_002.jpg"
                        "selected": True,
                        "favorite": False,
                    },
                    {
                        "id": 3,
                        "gallery_id": 2,  # Galer√≠a "Sesi√≥n Familiar L√≥pez"
                        "photo_id": 3,  # Foto "familia_001.jpg"
                        "selected": False,
                        "favorite": True,
                    },
                    {
                        "id": 4,
                        "gallery_id": 3,  # Galer√≠a "Evento Corporativo XYZ"
                        "photo_id": 4,  # Foto "evento_001.jpg"
                        "selected": False,
                        "favorite": False,
                    },
                ]

                # Insertar relaciones
                for galeria_foto in galeria_fotos:
                    conn.execute(gallery_photos.insert().values(galeria_foto))
                print("‚úÖ Relaciones entre galer√≠as y fotos creadas correctamente")

                # No necesitamos hacer commit expl√≠cito porque get_db lo maneja

            else:
                print("‚ÑπÔ∏è La base de datos ya contiene usuarios")

    except Exception as e:
        print(f"‚ùå Error durante la inicializaci√≥n: {str(e)}")
        raise e


def reset_db():
    """
    Elimina todas las tablas y las vuelve a crear con datos de ejemplo
    """
    try:
        print("üóëÔ∏è Eliminando tablas existentes...")
        meta.drop_all(engine)
        print("‚úÖ Tablas eliminadas correctamente")

        # Volver a crear las tablas
        init_db()

    except Exception as e:
        print(f"‚ùå Error durante el reset: {str(e)}")
        raise e


if __name__ == "__main__":
    import sys

    if len(sys.argv) > 1 and sys.argv[1] == "--reset":
        print("‚ö†Ô∏è Reiniciando la base de datos...")
        reset_db()
    else:
        init_db()
